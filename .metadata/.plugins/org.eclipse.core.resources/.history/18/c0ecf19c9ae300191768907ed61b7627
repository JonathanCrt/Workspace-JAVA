package fr.umlv.movies;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class Exercice2 {
	public static void main(String[] args) {
		/**
		 * qui associe des objets de type A à B.
		 * Map<B, A>
		 */
		var path = Path.of("data/movies.txt");	
		
	}
	
	public Map<String, List<String>> actorsByMovie(Path path) throws IOException {
		try(Stream<String> lines = Files.lines(path)){
			var moviesMap = new HashMap<String, List<String>>();
			lines.forEach(line  -> {
				// tableau de stream
				var tab = line.split(";");
				/**
				 * Je conserve le tableau
				 * je split.
				 * je construis un stream avec tout le tableau
				 * je "skip" pour garder tout sauf le premier élément.
				 * je re-transforme en List
				 */
				moviesMap.put(tab[0], Arrays.stream(tab).skip(1).collect(Collectors.toList()));
				
				/**
				 *  args -> (clé, valeur)
				 *  type film - liste acteurs associés
				 */
			});
			return moviesMap;
		}
		
	}
	
	public Map<String, List<String>> actorsByMovie2(Path path) throws IOException {
		try(Stream<String> lines = Files.lines(path)){
			
			return lines.map(line -> line.split(";"))
					.collect(
							Collectors.toUnmodifiableMap(
									tab -> tab[0], tab -> Arrays.stream(tab).skip(1).collect(Collectors.toList())));
			
		}
		
	}
	
	
	
	
	
	
}
